# Generated by Django 5.1.2 on 2025-07-20 17:23

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ModelUsageStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('model_name', models.CharField(max_length=128)),
                ('total_requests', models.PositiveIntegerField(default=0)),
                ('successful_requests', models.PositiveIntegerField(default=0)),
                ('failed_requests', models.PositiveIntegerField(default=0)),
                ('total_tokens', models.PositiveBigIntegerField(default=0)),
                ('total_cost', models.DecimalField(decimal_places=4, default=Decimal('0'), max_digits=12)),
                ('avg_latency_ms', models.FloatField(blank=True, null=True)),
                ('min_latency_ms', models.FloatField(blank=True, null=True)),
                ('max_latency_ms', models.FloatField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-date', 'model_name'],
                'indexes': [models.Index(fields=['date'], name='dashboard_m_date_4c69fe_idx'), models.Index(fields=['model_name', 'date'], name='dashboard_m_model_n_34abbc_idx')],
                'unique_together': {('date', 'model_name')},
            },
        ),
        migrations.CreateModel(
            name='RequestLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('endpoint', models.CharField(help_text="API endpoint like '/v1/chat/completions'", max_length=64)),
                ('method', models.CharField(default='POST', max_length=10)),
                ('status_code', models.PositiveSmallIntegerField()),
                ('latency_ms', models.FloatField(help_text='Request processing time in milliseconds')),
                ('model_name', models.CharField(blank=True, help_text="AI model used (e.g., 'gpt-4')", max_length=128)),
                ('prompt_tokens', models.PositiveIntegerField(blank=True, null=True)),
                ('completion_tokens', models.PositiveIntegerField(blank=True, null=True)),
                ('total_tokens', models.PositiveIntegerField(blank=True, null=True)),
                ('cost_usd', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('country_code', models.CharField(blank=True, help_text='ISO country code', max_length=2)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=500)),
                ('finish_reason', models.CharField(blank=True, help_text='AI completion finish reason', max_length=50)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeedbackLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1 Star - Poor'), (2, '2 Stars - Below Average'), (3, '3 Stars - Average'), (4, '4 Stars - Good'), (5, '5 Stars - Excellent')])),
                ('feedback_text', models.TextField(blank=True, help_text='Optional detailed feedback')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('request_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='dashboard.requestlog')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ThreatLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('threat_type', models.CharField(choices=[('rate_limit', 'Rate Limit Exceeded'), ('suspicious_content', 'Suspicious Content Detected'), ('invalid_auth', 'Invalid Authentication Attempt'), ('malformed_request', 'Malformed Request'), ('prompt_injection', 'Potential Prompt Injection'), ('abuse_detection', 'Content Abuse Detection')], max_length=50)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.CharField(blank=True, max_length=500)),
                ('country_code', models.CharField(blank=True, max_length=2)),
                ('description', models.TextField(blank=True)),
                ('raw_data', models.JSONField(blank=True, help_text='Additional threat context data', null=True)),
                ('resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('request_log', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.requestlog')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_threats', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_start', models.DateTimeField()),
                ('session_end', models.DateTimeField(blank=True, null=True)),
                ('total_requests', models.PositiveIntegerField(default=0)),
                ('total_cost', models.DecimalField(decimal_places=4, default=Decimal('0'), max_digits=10)),
                ('total_tokens', models.PositiveIntegerField(default=0)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=500)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-session_start'],
            },
        ),
        migrations.AddIndex(
            model_name='requestlog',
            index=models.Index(fields=['created_at'], name='dashboard_r_created_27b3c7_idx'),
        ),
        migrations.AddIndex(
            model_name='requestlog',
            index=models.Index(fields=['model_name'], name='dashboard_r_model_n_635b8b_idx'),
        ),
        migrations.AddIndex(
            model_name='requestlog',
            index=models.Index(fields=['user', 'created_at'], name='dashboard_r_user_id_2db609_idx'),
        ),
        migrations.AddIndex(
            model_name='requestlog',
            index=models.Index(fields=['status_code'], name='dashboard_r_status__2b7376_idx'),
        ),
        migrations.AddIndex(
            model_name='requestlog',
            index=models.Index(fields=['endpoint'], name='dashboard_r_endpoin_ccca01_idx'),
        ),
        migrations.AddIndex(
            model_name='feedbacklog',
            index=models.Index(fields=['created_at'], name='dashboard_f_created_1209ab_idx'),
        ),
        migrations.AddIndex(
            model_name='feedbacklog',
            index=models.Index(fields=['rating'], name='dashboard_f_rating_80d44d_idx'),
        ),
        migrations.AddIndex(
            model_name='feedbacklog',
            index=models.Index(fields=['request_log'], name='dashboard_f_request_8be26f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='feedbacklog',
            unique_together={('request_log', 'user')},
        ),
        migrations.AddIndex(
            model_name='threatlog',
            index=models.Index(fields=['created_at'], name='dashboard_t_created_4319ca_idx'),
        ),
        migrations.AddIndex(
            model_name='threatlog',
            index=models.Index(fields=['threat_type'], name='dashboard_t_threat__934720_idx'),
        ),
        migrations.AddIndex(
            model_name='threatlog',
            index=models.Index(fields=['severity'], name='dashboard_t_severit_b34718_idx'),
        ),
        migrations.AddIndex(
            model_name='threatlog',
            index=models.Index(fields=['ip_address'], name='dashboard_t_ip_addr_926040_idx'),
        ),
        migrations.AddIndex(
            model_name='threatlog',
            index=models.Index(fields=['resolved'], name='dashboard_t_resolve_2ef7fd_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['session_start'], name='dashboard_u_session_3a52f6_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['user', 'session_start'], name='dashboard_u_user_id_cec198_idx'),
        ),
    ]
